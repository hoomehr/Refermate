[
    {
        "check_type": "terraform",
        "results": {
            "passed_checks": [
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_56",
                    "bc_check_id": "BC_AWS_S3_22",
                    "check_name": "Ensure S3 bucket has 'restrict_public_buckets' enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "restrict_public_buckets"
                        ]
                    },
                    "code_block": [
                        [
                            69,
                            "resource \"aws_s3_bucket_public_access_block\" \"website_assets_public_access_block\" {\n"
                        ],
                        [
                            70,
                            "  bucket = aws_s3_bucket.website_assets.id\n"
                        ],
                        [
                            71,
                            "\n"
                        ],
                        [
                            72,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            73,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            74,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            75,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            76,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        69,
                        76
                    ],
                    "resource": "aws_s3_bucket_public_access_block.website_assets_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_54",
                    "bc_check_id": "BC_AWS_S3_20",
                    "check_name": "Ensure S3 bucket has block public policy enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            69,
                            "resource \"aws_s3_bucket_public_access_block\" \"website_assets_public_access_block\" {\n"
                        ],
                        [
                            70,
                            "  bucket = aws_s3_bucket.website_assets.id\n"
                        ],
                        [
                            71,
                            "\n"
                        ],
                        [
                            72,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            73,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            74,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            75,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            76,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        69,
                        76
                    ],
                    "resource": "aws_s3_bucket_public_access_block.website_assets_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_53",
                    "bc_check_id": "BC_AWS_S3_19",
                    "check_name": "Ensure S3 bucket has block public ACLS enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "block_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            69,
                            "resource \"aws_s3_bucket_public_access_block\" \"website_assets_public_access_block\" {\n"
                        ],
                        [
                            70,
                            "  bucket = aws_s3_bucket.website_assets.id\n"
                        ],
                        [
                            71,
                            "\n"
                        ],
                        [
                            72,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            73,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            74,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            75,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            76,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        69,
                        76
                    ],
                    "resource": "aws_s3_bucket_public_access_block.website_assets_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_55",
                    "bc_check_id": "BC_AWS_S3_21",
                    "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ignore_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            69,
                            "resource \"aws_s3_bucket_public_access_block\" \"website_assets_public_access_block\" {\n"
                        ],
                        [
                            70,
                            "  bucket = aws_s3_bucket.website_assets.id\n"
                        ],
                        [
                            71,
                            "\n"
                        ],
                        [
                            72,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            73,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            74,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            75,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            76,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        69,
                        76
                    ],
                    "resource": "aws_s3_bucket_public_access_block.website_assets_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_56",
                    "bc_check_id": "BC_AWS_S3_22",
                    "check_name": "Ensure S3 bucket has 'restrict_public_buckets' enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "restrict_public_buckets"
                        ]
                    },
                    "code_block": [
                        [
                            88,
                            "resource \"aws_s3_bucket_public_access_block\" \"cloudfront_logs_public_access_block\" {\n"
                        ],
                        [
                            89,
                            "  bucket = aws_s3_bucket.cloudfront_logs.id\n"
                        ],
                        [
                            90,
                            "\n"
                        ],
                        [
                            91,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            92,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            93,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            94,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            95,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        88,
                        95
                    ],
                    "resource": "aws_s3_bucket_public_access_block.cloudfront_logs_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_54",
                    "bc_check_id": "BC_AWS_S3_20",
                    "check_name": "Ensure S3 bucket has block public policy enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            88,
                            "resource \"aws_s3_bucket_public_access_block\" \"cloudfront_logs_public_access_block\" {\n"
                        ],
                        [
                            89,
                            "  bucket = aws_s3_bucket.cloudfront_logs.id\n"
                        ],
                        [
                            90,
                            "\n"
                        ],
                        [
                            91,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            92,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            93,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            94,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            95,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        88,
                        95
                    ],
                    "resource": "aws_s3_bucket_public_access_block.cloudfront_logs_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_53",
                    "bc_check_id": "BC_AWS_S3_19",
                    "check_name": "Ensure S3 bucket has block public ACLS enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "block_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            88,
                            "resource \"aws_s3_bucket_public_access_block\" \"cloudfront_logs_public_access_block\" {\n"
                        ],
                        [
                            89,
                            "  bucket = aws_s3_bucket.cloudfront_logs.id\n"
                        ],
                        [
                            90,
                            "\n"
                        ],
                        [
                            91,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            92,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            93,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            94,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            95,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        88,
                        95
                    ],
                    "resource": "aws_s3_bucket_public_access_block.cloudfront_logs_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_55",
                    "bc_check_id": "BC_AWS_S3_21",
                    "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ignore_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            88,
                            "resource \"aws_s3_bucket_public_access_block\" \"cloudfront_logs_public_access_block\" {\n"
                        ],
                        [
                            89,
                            "  bucket = aws_s3_bucket.cloudfront_logs.id\n"
                        ],
                        [
                            90,
                            "\n"
                        ],
                        [
                            91,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            92,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            93,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            94,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            95,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        88,
                        95
                    ],
                    "resource": "aws_s3_bucket_public_access_block.cloudfront_logs_public_access_block",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_233",
                    "bc_check_id": "BC_AWS_NETWORKING_69",
                    "check_name": "Ensure Create before destroy for ACM certificates",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "lifecycle/[0]/create_before_destroy"
                        ]
                    },
                    "code_block": [
                        [
                            105,
                            "resource \"aws_acm_certificate\" \"app_certificate\" {\n"
                        ],
                        [
                            106,
                            "  domain_name       = var.domain_name\n"
                        ],
                        [
                            107,
                            "  validation_method = \"DNS\"\n"
                        ],
                        [
                            108,
                            "  tags              = var.common_tags\n"
                        ],
                        [
                            109,
                            "\n"
                        ],
                        [
                            110,
                            "  lifecycle {\n"
                        ],
                        [
                            111,
                            "    create_before_destroy = true\n"
                        ],
                        [
                            112,
                            "  }\n"
                        ],
                        [
                            113,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        105,
                        113
                    ],
                    "resource": "aws_acm_certificate.app_certificate",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ACMCertCreateBeforeDestroy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-acm-certificate-enables-create-before-destroy",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_234",
                    "bc_check_id": "BC_AWS_GENERAL_173",
                    "check_name": "Verify logging preference for ACM certificates",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "options/[0]/certificate_transparency_logging_preference"
                        ]
                    },
                    "code_block": [
                        [
                            105,
                            "resource \"aws_acm_certificate\" \"app_certificate\" {\n"
                        ],
                        [
                            106,
                            "  domain_name       = var.domain_name\n"
                        ],
                        [
                            107,
                            "  validation_method = \"DNS\"\n"
                        ],
                        [
                            108,
                            "  tags              = var.common_tags\n"
                        ],
                        [
                            109,
                            "\n"
                        ],
                        [
                            110,
                            "  lifecycle {\n"
                        ],
                        [
                            111,
                            "    create_before_destroy = true\n"
                        ],
                        [
                            112,
                            "  }\n"
                        ],
                        [
                            113,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        105,
                        113
                    ],
                    "resource": "aws_acm_certificate.app_certificate",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ACMCertSetLoggingPreference",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-acm-certificates-has-logging-preference",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            165,
                            "resource \"aws_s3_bucket_policy\" \"website_assets_policy\" {\n"
                        ],
                        [
                            166,
                            "  bucket = aws_s3_bucket.website_assets.id\n"
                        ],
                        [
                            167,
                            "  policy = data.aws_iam_policy_document.s3_policy.json\n"
                        ],
                        [
                            168,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        165,
                        168
                    ],
                    "resource": "aws_s3_bucket_policy.website_assets_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_342",
                    "bc_check_id": "BC_AWS_GENERAL_245",
                    "check_name": "Ensure WAF rule has any actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "rule",
                            "rules",
                            "activated_rule"
                        ]
                    },
                    "code_block": [
                        [
                            172,
                            "resource \"aws_wafv2_web_acl\" \"default\" {\n"
                        ],
                        [
                            173,
                            "  name        = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            174,
                            "  scope       = \"CLOUDFRONT\"\n"
                        ],
                        [
                            175,
                            "  description = \"WAF WebACL for the ${var.project_name} application\"\n"
                        ],
                        [
                            176,
                            "\n"
                        ],
                        [
                            177,
                            "  default_action {\n"
                        ],
                        [
                            178,
                            "    allow {}\n"
                        ],
                        [
                            179,
                            "  }\n"
                        ],
                        [
                            180,
                            "\n"
                        ],
                        [
                            181,
                            "  # Example: AWS Managed Rule - Common Rule Set\n"
                        ],
                        [
                            182,
                            "  rule {\n"
                        ],
                        [
                            183,
                            "    name     = \"AWS-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            184,
                            "    priority = 1\n"
                        ],
                        [
                            185,
                            "    override_action {\n"
                        ],
                        [
                            186,
                            "      none {}\n"
                        ],
                        [
                            187,
                            "    }\n"
                        ],
                        [
                            188,
                            "    statement {\n"
                        ],
                        [
                            189,
                            "      managed_rule_group_statement {\n"
                        ],
                        [
                            190,
                            "        name        = \"AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            191,
                            "        vendor_name = \"AWS\"\n"
                        ],
                        [
                            192,
                            "      }\n"
                        ],
                        [
                            193,
                            "    }\n"
                        ],
                        [
                            194,
                            "    visibility_config {\n"
                        ],
                        [
                            195,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            196,
                            "      metric_name                = \"${var.project_name}-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            197,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            198,
                            "    }\n"
                        ],
                        [
                            199,
                            "  }\n"
                        ],
                        [
                            200,
                            "  \n"
                        ],
                        [
                            201,
                            "  # Example: Rate-based rule to mitigate DDoS\n"
                        ],
                        [
                            202,
                            "  rule {\n"
                        ],
                        [
                            203,
                            "    name     = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            204,
                            "    priority = 2\n"
                        ],
                        [
                            205,
                            "    action {\n"
                        ],
                        [
                            206,
                            "      block {} # Or count {} for testing\n"
                        ],
                        [
                            207,
                            "    }\n"
                        ],
                        [
                            208,
                            "    statement {\n"
                        ],
                        [
                            209,
                            "      rate_based_statement {\n"
                        ],
                        [
                            210,
                            "        limit              = 2000 # Requests per 5-minute period per IP\n"
                        ],
                        [
                            211,
                            "        aggregate_key_type = \"IP\"\n"
                        ],
                        [
                            212,
                            "      }\n"
                        ],
                        [
                            213,
                            "    }\n"
                        ],
                        [
                            214,
                            "    visibility_config {\n"
                        ],
                        [
                            215,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            216,
                            "      metric_name                = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            217,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            218,
                            "    }\n"
                        ],
                        [
                            219,
                            "  }\n"
                        ],
                        [
                            220,
                            "\n"
                        ],
                        [
                            221,
                            "  visibility_config {\n"
                        ],
                        [
                            222,
                            "    cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            223,
                            "    metric_name                = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            224,
                            "    sampled_requests_enabled   = true\n"
                        ],
                        [
                            225,
                            "  }\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            228,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        172,
                        228
                    ],
                    "resource": "aws_wafv2_web_acl.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFRuleHasAnyActions",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-342",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "description": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_175",
                    "bc_check_id": "BC_AWS_NETWORKING_64",
                    "check_name": "Ensure WAF has associated rules",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            172,
                            "resource \"aws_wafv2_web_acl\" \"default\" {\n"
                        ],
                        [
                            173,
                            "  name        = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            174,
                            "  scope       = \"CLOUDFRONT\"\n"
                        ],
                        [
                            175,
                            "  description = \"WAF WebACL for the ${var.project_name} application\"\n"
                        ],
                        [
                            176,
                            "\n"
                        ],
                        [
                            177,
                            "  default_action {\n"
                        ],
                        [
                            178,
                            "    allow {}\n"
                        ],
                        [
                            179,
                            "  }\n"
                        ],
                        [
                            180,
                            "\n"
                        ],
                        [
                            181,
                            "  # Example: AWS Managed Rule - Common Rule Set\n"
                        ],
                        [
                            182,
                            "  rule {\n"
                        ],
                        [
                            183,
                            "    name     = \"AWS-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            184,
                            "    priority = 1\n"
                        ],
                        [
                            185,
                            "    override_action {\n"
                        ],
                        [
                            186,
                            "      none {}\n"
                        ],
                        [
                            187,
                            "    }\n"
                        ],
                        [
                            188,
                            "    statement {\n"
                        ],
                        [
                            189,
                            "      managed_rule_group_statement {\n"
                        ],
                        [
                            190,
                            "        name        = \"AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            191,
                            "        vendor_name = \"AWS\"\n"
                        ],
                        [
                            192,
                            "      }\n"
                        ],
                        [
                            193,
                            "    }\n"
                        ],
                        [
                            194,
                            "    visibility_config {\n"
                        ],
                        [
                            195,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            196,
                            "      metric_name                = \"${var.project_name}-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            197,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            198,
                            "    }\n"
                        ],
                        [
                            199,
                            "  }\n"
                        ],
                        [
                            200,
                            "  \n"
                        ],
                        [
                            201,
                            "  # Example: Rate-based rule to mitigate DDoS\n"
                        ],
                        [
                            202,
                            "  rule {\n"
                        ],
                        [
                            203,
                            "    name     = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            204,
                            "    priority = 2\n"
                        ],
                        [
                            205,
                            "    action {\n"
                        ],
                        [
                            206,
                            "      block {} # Or count {} for testing\n"
                        ],
                        [
                            207,
                            "    }\n"
                        ],
                        [
                            208,
                            "    statement {\n"
                        ],
                        [
                            209,
                            "      rate_based_statement {\n"
                        ],
                        [
                            210,
                            "        limit              = 2000 # Requests per 5-minute period per IP\n"
                        ],
                        [
                            211,
                            "        aggregate_key_type = \"IP\"\n"
                        ],
                        [
                            212,
                            "      }\n"
                        ],
                        [
                            213,
                            "    }\n"
                        ],
                        [
                            214,
                            "    visibility_config {\n"
                        ],
                        [
                            215,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            216,
                            "      metric_name                = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            217,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            218,
                            "    }\n"
                        ],
                        [
                            219,
                            "  }\n"
                        ],
                        [
                            220,
                            "\n"
                        ],
                        [
                            221,
                            "  visibility_config {\n"
                        ],
                        [
                            222,
                            "    cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            223,
                            "    metric_name                = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            224,
                            "    sampled_requests_enabled   = true\n"
                        ],
                        [
                            225,
                            "  }\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            228,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        172,
                        228
                    ],
                    "resource": "aws_wafv2_web_acl.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFHasAnyRules",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-64",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "description": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_174",
                    "bc_check_id": "BC_AWS_NETWORKING_63",
                    "check_name": "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "viewer_certificate/[0]/minimum_protocol_version"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-63",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_34",
                    "bc_check_id": "BC_AWS_NETWORKING_32",
                    "check_name": "Ensure CloudFront distribution ViewerProtocolPolicy is set to HTTPS",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "default_cache_behavior/[0]/viewer_protocol_policy"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-32",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_216",
                    "bc_check_id": "BC_AWS_GENERAL_148",
                    "check_name": "Ensure CloudFront distribution is enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "enabled"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-cloudfront-distribution-is-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_305",
                    "bc_check_id": "BC_AWS_GENERAL_219",
                    "check_name": "Ensure CloudFront distribution has a default root object configured",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "default_root_object"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionDefaultRoot",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-305",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_68",
                    "bc_check_id": "BC_AWS_GENERAL_27",
                    "check_name": "CloudFront Distribution should have WAF enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "web_acl_id"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-27",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_86",
                    "bc_check_id": "BC_AWS_LOGGING_20",
                    "check_name": "Ensure CloudFront distribution has Access Logging enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "logging_config/[0]/bucket"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-20",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            13,
                            "provider \"aws\" {\n"
                        ],
                        [
                            14,
                            "  region = var.aws_region\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        13,
                        15
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "region": [
                            {
                                "type": "variable",
                                "name": "aws_region",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_111",
                    "bc_check_id": "BC_AWS_IAM_57",
                    "check_name": "Ensure IAM policies does not allow write access without constraints",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMWriteAccess",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_49",
                    "bc_check_id": "BC_AWS_IAM_43",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.StarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-43",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_108",
                    "bc_check_id": "BC_AWS_IAM_55",
                    "check_name": "Ensure IAM policies does not allow data exfiltration",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMDataExfiltration",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_110",
                    "bc_check_id": "BC_AWS_IAM_64",
                    "check_name": "Ensure IAM policies does not allow privilege escalation",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPrivilegeEscalation",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_107",
                    "bc_check_id": "BC_AWS_IAM_54",
                    "check_name": "Ensure IAM policies does not allow credentials exposure",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMCredentialsExposure",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_109",
                    "bc_check_id": "BC_AWS_IAM_56",
                    "check_name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPermissionsManagement",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_1",
                    "bc_check_id": "BC_AWS_IAM_23",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.AdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-23",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_356",
                    "bc_check_id": "BC_AWS_IAM_89",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.ResourcePolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-356",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_283",
                    "bc_check_id": "BC_AWS_IAM_80",
                    "check_name": "Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPublicActionsPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-283",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_358",
                    "bc_check_id": "BC_AWS_IAM_72",
                    "check_name": "Ensure AWS GitHub Actions OIDC authorization policies only allow safe claims and claim order",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "statement/condition/variable",
                            "statement/condition/values"
                        ]
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.GithubActionsOIDCTrustPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-358",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV2_AWS_42",
                    "bc_check_id": "BC_AWS_NETWORKING_79",
                    "check_name": "Ensure AWS CloudFront distribution uses custom SSL certificate",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "__end_line__": 300,
                                    "__start_line__": 232,
                                    "aliases": [
                                        [
                                            "var.domain_name"
                                        ]
                                    ],
                                    "comment": [
                                        "CloudFront distribution for react-app"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "compress": [
                                                true
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "depends_on": [
                                        [
                                            "aws_acm_certificate_validation.cert_validation"
                                        ]
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "aws_s3_bucket.cloudfront_logs.bucket_domain_name"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "react-app-cf-access-logs/"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.website_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_access_control_id": [
                                                "aws_cloudfront_origin_access_control.default.id"
                                            ],
                                            "origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "aws_acm_certificate.app_certificate.arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "web_acl_id": [
                                        "aws_wafv2_web_acl.default.arn"
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "viewer_certificate/iam_certificate_id",
                            "viewer_certificate/acm_certificate_arn"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-cloudfront-distribution-uses-custom-ssl-certificate",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_54",
                    "bc_check_id": "BC_AWS_NETWORKING_84",
                    "check_name": "Ensure AWS CloudFront distribution is using secure SSL protocols for HTTPS communication",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "__end_line__": 300,
                                    "__start_line__": 232,
                                    "aliases": [
                                        [
                                            "var.domain_name"
                                        ]
                                    ],
                                    "comment": [
                                        "CloudFront distribution for react-app"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "compress": [
                                                true
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "depends_on": [
                                        [
                                            "aws_acm_certificate_validation.cert_validation"
                                        ]
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "aws_s3_bucket.cloudfront_logs.bucket_domain_name"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "react-app-cf-access-logs/"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.website_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_access_control_id": [
                                                "aws_cloudfront_origin_access_control.default.id"
                                            ],
                                            "origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "aws_acm_certificate.app_certificate.arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "web_acl_id": [
                                        "aws_wafv2_web_acl.default.arn"
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "origin/*/custom_origin_config/origin_ssl_protocols"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-54",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_72",
                    "bc_check_id": "BC_AWS_NETWORKING_96",
                    "check_name": "Ensure AWS CloudFront origin protocol policy enforces HTTPS-only",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "__end_line__": 300,
                                    "__start_line__": 232,
                                    "aliases": [
                                        [
                                            "var.domain_name"
                                        ]
                                    ],
                                    "comment": [
                                        "CloudFront distribution for react-app"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "compress": [
                                                true
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "depends_on": [
                                        [
                                            "aws_acm_certificate_validation.cert_validation"
                                        ]
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "aws_s3_bucket.cloudfront_logs.bucket_domain_name"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "react-app-cf-access-logs/"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.website_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_access_control_id": [
                                                "aws_cloudfront_origin_access_control.default.id"
                                            ],
                                            "origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "aws_acm_certificate.app_certificate.arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "web_acl_id": [
                                        "aws_wafv2_web_acl.default.arn"
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "origin[?(@/custom_origin_config/origin_protocol_policy != 'https-only')]/domain_name",
                            "enabled",
                            "origin/*/custom_origin_config"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-72",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_73",
                    "check_name": "Ensure AWS IAM policy does not allow full IAM privileges",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_policy_document": {
                                "s3_policy": {
                                    "__end_line__": 163,
                                    "__start_line__": 147,
                                    "statement": [
                                        {
                                            "actions": [
                                                [
                                                    "s3:GetObject"
                                                ]
                                            ],
                                            "condition": [
                                                {
                                                    "test": [
                                                        "StringEquals"
                                                    ],
                                                    "values": [
                                                        [
                                                            "aws_cloudfront_distribution.s3_distribution.arn"
                                                        ]
                                                    ],
                                                    "variable": [
                                                        "AWS:SourceArn"
                                                    ]
                                                }
                                            ],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        [
                                                            "cloudfront.amazonaws.com"
                                                        ]
                                                    ],
                                                    "type": [
                                                        "Service"
                                                    ]
                                                }
                                            ],
                                            "resources": [
                                                [
                                                    "${aws_s3_bucket.website_assets.arn}/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_iam_policy_document.s3_policy"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "inline_policy/Statement[?(@/Effect == Allow)]/Action[*]",
                            "policy/Statement[?(@/Effect == Allow)]/Action[*]",
                            "statement[?(@/effect == Allow)]/actions[*]"
                        ]
                    },
                    "code_block": [
                        [
                            147,
                            "data \"aws_iam_policy_document\" \"s3_policy\" {\n"
                        ],
                        [
                            148,
                            "  statement {\n"
                        ],
                        [
                            149,
                            "    actions   = [\"s3:GetObject\"]\n"
                        ],
                        [
                            150,
                            "    resources = [\"${aws_s3_bucket.website_assets.arn}/*\"]\n"
                        ],
                        [
                            151,
                            "\n"
                        ],
                        [
                            152,
                            "    principals {\n"
                        ],
                        [
                            153,
                            "      type        = \"Service\"\n"
                        ],
                        [
                            154,
                            "      identifiers = [\"cloudfront.amazonaws.com\"]\n"
                        ],
                        [
                            155,
                            "    }\n"
                        ],
                        [
                            156,
                            "\n"
                        ],
                        [
                            157,
                            "    condition {\n"
                        ],
                        [
                            158,
                            "      test     = \"StringEquals\"\n"
                        ],
                        [
                            159,
                            "      variable = \"AWS:SourceArn\"\n"
                        ],
                        [
                            160,
                            "      values   = [aws_cloudfront_distribution.s3_distribution.arn]\n"
                        ],
                        [
                            161,
                            "    }\n"
                        ],
                        [
                            162,
                            "  }\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        147,
                        163
                    ],
                    "resource": "aws_iam_policy_document.s3_policy",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-40",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "access_control_policy/grant",
                            "access_control_policy",
                            "acl",
                            "resource_type",
                            "access_control_policy/grant/*/grantee/uri"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "access_control_policy/grant",
                            "access_control_policy",
                            "acl",
                            "resource_type",
                            "access_control_policy/grant/*/grantee/uri"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "access_control_policy/grant",
                            "access_control_policy/grant/*/permission",
                            "access_control_policy",
                            "acl",
                            "resource_type",
                            "access_control_policy/grant/*/grantee/uri"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "access_control_policy/grant",
                            "access_control_policy/grant/*/permission",
                            "access_control_policy",
                            "acl",
                            "resource_type",
                            "access_control_policy/grant/*/grantee/uri"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "block_public_acls",
                            "block_public_policy",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "block_public_acls",
                            "block_public_policy",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "versioning_configuration/status",
                            "versioning/enabled",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_46",
                    "bc_check_id": "BC_AWS_IAM_71",
                    "check_name": "Ensure AWS CloudFront Distribution with S3 have Origin Access set to enabled",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "__end_line__": 300,
                                    "__start_line__": 232,
                                    "aliases": [
                                        [
                                            "var.domain_name"
                                        ]
                                    ],
                                    "comment": [
                                        "CloudFront distribution for react-app"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "compress": [
                                                true
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "depends_on": [
                                        [
                                            "aws_acm_certificate_validation.cert_validation"
                                        ]
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "aws_s3_bucket.cloudfront_logs.bucket_domain_name"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "react-app-cf-access-logs/"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.website_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_access_control_id": [
                                                "aws_cloudfront_origin_access_control.default.id"
                                            ],
                                            "origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "aws_acm_certificate.app_certificate.arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "web_acl_id": [
                                        "aws_wafv2_web_acl.default.arn"
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "origin/*/s3_origin_config",
                            "origin/*/origin_access_control_id",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-aws-cloudfromt-distribution-with-s3-have-origin-access-set-to-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_23",
                    "bc_check_id": "BC_AWS_GENERAL_95",
                    "check_name": "Route53 A Record has Attached Resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_route53_record": {
                                "app_dns_record": {
                                    "__end_line__": 313,
                                    "__start_line__": 303,
                                    "alias": [
                                        {
                                            "name": [
                                                "aws_cloudfront_distribution.s3_distribution.domain_name"
                                            ],
                                            "zone_id": [
                                                "aws_cloudfront_distribution.s3_distribution.hosted_zone_id"
                                            ],
                                            "evaluate_target_health": [
                                                false
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "var.domain_name"
                                    ],
                                    "type": [
                                        "A"
                                    ],
                                    "zone_id": [
                                        "data.aws_route53_zone.selected_zone.zone_id"
                                    ],
                                    "__address__": "aws_route53_record.app_dns_record",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "alias/name",
                            "type",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            303,
                            "resource \"aws_route53_record\" \"app_dns_record\" {\n"
                        ],
                        [
                            304,
                            "  zone_id = data.aws_route53_zone.selected_zone.zone_id\n"
                        ],
                        [
                            305,
                            "  name    = var.domain_name\n"
                        ],
                        [
                            306,
                            "  type    = \"A\"\n"
                        ],
                        [
                            307,
                            "\n"
                        ],
                        [
                            308,
                            "  alias {\n"
                        ],
                        [
                            309,
                            "    name                   = aws_cloudfront_distribution.s3_distribution.domain_name\n"
                        ],
                        [
                            310,
                            "    zone_id                = aws_cloudfront_distribution.s3_distribution.hosted_zone_id\n"
                        ],
                        [
                            311,
                            "    evaluate_target_health = false # CloudFront is globally distributed, health checks are typically not needed at DNS level\n"
                        ],
                        [
                            312,
                            "  }\n"
                        ],
                        [
                            313,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        303,
                        313
                    ],
                    "resource": "aws_route53_record.app_dns_record",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-route53-a-record-has-an-attached-resource",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                }
            ],
            "failed_checks": [
                {
                    "check_id": "CKV_AWS_192",
                    "bc_check_id": "BC_AWS_NETWORKING_61",
                    "check_name": "Ensure WAF prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "rule/[1]/statement/[0]/managed_rule_group_statement"
                        ]
                    },
                    "code_block": [
                        [
                            172,
                            "resource \"aws_wafv2_web_acl\" \"default\" {\n"
                        ],
                        [
                            173,
                            "  name        = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            174,
                            "  scope       = \"CLOUDFRONT\"\n"
                        ],
                        [
                            175,
                            "  description = \"WAF WebACL for the ${var.project_name} application\"\n"
                        ],
                        [
                            176,
                            "\n"
                        ],
                        [
                            177,
                            "  default_action {\n"
                        ],
                        [
                            178,
                            "    allow {}\n"
                        ],
                        [
                            179,
                            "  }\n"
                        ],
                        [
                            180,
                            "\n"
                        ],
                        [
                            181,
                            "  # Example: AWS Managed Rule - Common Rule Set\n"
                        ],
                        [
                            182,
                            "  rule {\n"
                        ],
                        [
                            183,
                            "    name     = \"AWS-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            184,
                            "    priority = 1\n"
                        ],
                        [
                            185,
                            "    override_action {\n"
                        ],
                        [
                            186,
                            "      none {}\n"
                        ],
                        [
                            187,
                            "    }\n"
                        ],
                        [
                            188,
                            "    statement {\n"
                        ],
                        [
                            189,
                            "      managed_rule_group_statement {\n"
                        ],
                        [
                            190,
                            "        name        = \"AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            191,
                            "        vendor_name = \"AWS\"\n"
                        ],
                        [
                            192,
                            "      }\n"
                        ],
                        [
                            193,
                            "    }\n"
                        ],
                        [
                            194,
                            "    visibility_config {\n"
                        ],
                        [
                            195,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            196,
                            "      metric_name                = \"${var.project_name}-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            197,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            198,
                            "    }\n"
                        ],
                        [
                            199,
                            "  }\n"
                        ],
                        [
                            200,
                            "  \n"
                        ],
                        [
                            201,
                            "  # Example: Rate-based rule to mitigate DDoS\n"
                        ],
                        [
                            202,
                            "  rule {\n"
                        ],
                        [
                            203,
                            "    name     = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            204,
                            "    priority = 2\n"
                        ],
                        [
                            205,
                            "    action {\n"
                        ],
                        [
                            206,
                            "      block {} # Or count {} for testing\n"
                        ],
                        [
                            207,
                            "    }\n"
                        ],
                        [
                            208,
                            "    statement {\n"
                        ],
                        [
                            209,
                            "      rate_based_statement {\n"
                        ],
                        [
                            210,
                            "        limit              = 2000 # Requests per 5-minute period per IP\n"
                        ],
                        [
                            211,
                            "        aggregate_key_type = \"IP\"\n"
                        ],
                        [
                            212,
                            "      }\n"
                        ],
                        [
                            213,
                            "    }\n"
                        ],
                        [
                            214,
                            "    visibility_config {\n"
                        ],
                        [
                            215,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            216,
                            "      metric_name                = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            217,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            218,
                            "    }\n"
                        ],
                        [
                            219,
                            "  }\n"
                        ],
                        [
                            220,
                            "\n"
                        ],
                        [
                            221,
                            "  visibility_config {\n"
                        ],
                        [
                            222,
                            "    cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            223,
                            "    metric_name                = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            224,
                            "    sampled_requests_enabled   = true\n"
                        ],
                        [
                            225,
                            "  }\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            228,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        172,
                        228
                    ],
                    "resource": "aws_wafv2_web_acl.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFACLCVE202144228",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-waf-prevents-message-lookup-in-log4j2",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "description": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_310",
                    "bc_check_id": "BC_AWS_GENERAL_222",
                    "check_name": "Ensure CloudFront distributions should have origin failover configured",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionOriginFailover",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-310",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_374",
                    "bc_check_id": "BC_AWS_NETWORKING_97",
                    "check_name": "Ensure AWS CloudFront web distribution has geo restriction enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "restrictions/[0]/geo_restriction/[0]/restriction_type"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudFrontGeoRestrictionDisabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-374",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_32",
                    "bc_check_id": "BC_AWS_NETWORKING_65",
                    "check_name": "Ensure CloudFront distribution has a response headers policy attached",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "__end_line__": 300,
                                    "__start_line__": 232,
                                    "aliases": [
                                        [
                                            "var.domain_name"
                                        ]
                                    ],
                                    "comment": [
                                        "CloudFront distribution for react-app"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "compress": [
                                                true
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "depends_on": [
                                        [
                                            "aws_acm_certificate_validation.cert_validation"
                                        ]
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "aws_s3_bucket.cloudfront_logs.bucket_domain_name"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "react-app-cf-access-logs/"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.website_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_access_control_id": [
                                                "aws_cloudfront_origin_access_control.default.id"
                                            ],
                                            "origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "aws_acm_certificate.app_certificate.arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "web_acl_id": [
                                        "aws_wafv2_web_acl.default.arn"
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-65",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_62",
                    "bc_check_id": "BC_AWS_LOGGING_36",
                    "check_name": "Ensure S3 buckets should have event notifications enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_62",
                    "bc_check_id": "BC_AWS_LOGGING_36",
                    "check_name": "Ensure S3 buckets should have event notifications enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/*/status",
                            "replication_configuration/rules/*/status",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/*/status",
                            "replication_configuration/rules/*/status",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_31",
                    "bc_check_id": "BC_AWS_LOGGING_33",
                    "check_name": "Ensure WAF2 has a Logging Configuration",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_wafv2_web_acl": {
                                "default": {
                                    "__end_line__": 228,
                                    "__start_line__": 172,
                                    "default_action": [
                                        {
                                            "allow": [
                                                {}
                                            ]
                                        }
                                    ],
                                    "description": [
                                        "WAF WebACL for the react-app application"
                                    ],
                                    "name": [
                                        "react-app-web-acl"
                                    ],
                                    "rule": [
                                        {
                                            "name": [
                                                "AWS-AWSManagedRulesCommonRuleSet"
                                            ],
                                            "override_action": [
                                                {
                                                    "none": [
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "priority": [
                                                1
                                            ],
                                            "statement": [
                                                {
                                                    "managed_rule_group_statement": [
                                                        {
                                                            "name": [
                                                                "AWSManagedRulesCommonRuleSet"
                                                            ],
                                                            "vendor_name": [
                                                                "AWS"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "visibility_config": [
                                                {
                                                    "cloudwatch_metrics_enabled": [
                                                        true
                                                    ],
                                                    "metric_name": [
                                                        "react-app-AWSManagedRulesCommonRuleSet"
                                                    ],
                                                    "sampled_requests_enabled": [
                                                        true
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "action": [
                                                {
                                                    "block": [
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "name": [
                                                "react-app-RateLimitRule"
                                            ],
                                            "priority": [
                                                2
                                            ],
                                            "statement": [
                                                {
                                                    "rate_based_statement": [
                                                        {
                                                            "aggregate_key_type": [
                                                                "IP"
                                                            ],
                                                            "limit": [
                                                                2000
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "visibility_config": [
                                                {
                                                    "cloudwatch_metrics_enabled": [
                                                        true
                                                    ],
                                                    "metric_name": [
                                                        "react-app-RateLimitRule"
                                                    ],
                                                    "sampled_requests_enabled": [
                                                        true
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "scope": [
                                        "CLOUDFRONT"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "visibility_config": [
                                        {
                                            "cloudwatch_metrics_enabled": [
                                                true
                                            ],
                                            "metric_name": [
                                                "react-app-web-acl"
                                            ],
                                            "sampled_requests_enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_wafv2_web_acl.default",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            172,
                            "resource \"aws_wafv2_web_acl\" \"default\" {\n"
                        ],
                        [
                            173,
                            "  name        = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            174,
                            "  scope       = \"CLOUDFRONT\"\n"
                        ],
                        [
                            175,
                            "  description = \"WAF WebACL for the ${var.project_name} application\"\n"
                        ],
                        [
                            176,
                            "\n"
                        ],
                        [
                            177,
                            "  default_action {\n"
                        ],
                        [
                            178,
                            "    allow {}\n"
                        ],
                        [
                            179,
                            "  }\n"
                        ],
                        [
                            180,
                            "\n"
                        ],
                        [
                            181,
                            "  # Example: AWS Managed Rule - Common Rule Set\n"
                        ],
                        [
                            182,
                            "  rule {\n"
                        ],
                        [
                            183,
                            "    name     = \"AWS-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            184,
                            "    priority = 1\n"
                        ],
                        [
                            185,
                            "    override_action {\n"
                        ],
                        [
                            186,
                            "      none {}\n"
                        ],
                        [
                            187,
                            "    }\n"
                        ],
                        [
                            188,
                            "    statement {\n"
                        ],
                        [
                            189,
                            "      managed_rule_group_statement {\n"
                        ],
                        [
                            190,
                            "        name        = \"AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            191,
                            "        vendor_name = \"AWS\"\n"
                        ],
                        [
                            192,
                            "      }\n"
                        ],
                        [
                            193,
                            "    }\n"
                        ],
                        [
                            194,
                            "    visibility_config {\n"
                        ],
                        [
                            195,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            196,
                            "      metric_name                = \"${var.project_name}-AWSManagedRulesCommonRuleSet\"\n"
                        ],
                        [
                            197,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            198,
                            "    }\n"
                        ],
                        [
                            199,
                            "  }\n"
                        ],
                        [
                            200,
                            "  \n"
                        ],
                        [
                            201,
                            "  # Example: Rate-based rule to mitigate DDoS\n"
                        ],
                        [
                            202,
                            "  rule {\n"
                        ],
                        [
                            203,
                            "    name     = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            204,
                            "    priority = 2\n"
                        ],
                        [
                            205,
                            "    action {\n"
                        ],
                        [
                            206,
                            "      block {} # Or count {} for testing\n"
                        ],
                        [
                            207,
                            "    }\n"
                        ],
                        [
                            208,
                            "    statement {\n"
                        ],
                        [
                            209,
                            "      rate_based_statement {\n"
                        ],
                        [
                            210,
                            "        limit              = 2000 # Requests per 5-minute period per IP\n"
                        ],
                        [
                            211,
                            "        aggregate_key_type = \"IP\"\n"
                        ],
                        [
                            212,
                            "      }\n"
                        ],
                        [
                            213,
                            "    }\n"
                        ],
                        [
                            214,
                            "    visibility_config {\n"
                        ],
                        [
                            215,
                            "      cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            216,
                            "      metric_name                = \"${var.project_name}-RateLimitRule\"\n"
                        ],
                        [
                            217,
                            "      sampled_requests_enabled   = true\n"
                        ],
                        [
                            218,
                            "    }\n"
                        ],
                        [
                            219,
                            "  }\n"
                        ],
                        [
                            220,
                            "\n"
                        ],
                        [
                            221,
                            "  visibility_config {\n"
                        ],
                        [
                            222,
                            "    cloudwatch_metrics_enabled = true\n"
                        ],
                        [
                            223,
                            "    metric_name                = \"${var.project_name}-web-acl\"\n"
                        ],
                        [
                            224,
                            "    sampled_requests_enabled   = true\n"
                        ],
                        [
                            225,
                            "  }\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            228,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        172,
                        228
                    ],
                    "resource": "aws_wafv2_web_acl.default",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-33",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "description": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.0": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "rule.1.visibility_config": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "visibility_config.metric_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "versioning_configuration/status",
                            "versioning/enabled",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "logging",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "logging",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_61",
                    "bc_check_id": "BC_AWS_LOGGING_35",
                    "check_name": "Ensure that an S3 bucket has a lifecycle configuration",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "website_assets": {
                                    "__end_line__": 62,
                                    "__start_line__": 54,
                                    "bucket": [
                                        "react-app-assets-${random_id.bucket_suffix.hex}"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                true
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.website_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "lifecycle_rule",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            54,
                            "resource \"aws_s3_bucket\" \"website_assets\" {\n"
                        ],
                        [
                            55,
                            "  bucket = \"${var.project_name}-assets-${random_id.bucket_suffix.hex}\" # Ensures unique bucket name\n"
                        ],
                        [
                            56,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  # It's good practice to enable versioning\n"
                        ],
                        [
                            59,
                            "  versioning {\n"
                        ],
                        [
                            60,
                            "    enabled = true\n"
                        ],
                        [
                            61,
                            "  }\n"
                        ],
                        [
                            62,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        54,
                        62
                    ],
                    "resource": "aws_s3_bucket.website_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.website_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_61",
                    "bc_check_id": "BC_AWS_LOGGING_35",
                    "check_name": "Ensure that an S3 bucket has a lifecycle configuration",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "cloudfront_logs": {
                                    "__end_line__": 86,
                                    "__start_line__": 79,
                                    "bucket": [
                                        "react-app-cf-logs-${random_id.bucket_suffix.hex}"
                                    ],
                                    "lifecycle": [
                                        {
                                            "prevent_destroy": [
                                                false
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.cloudfront_logs",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "lifecycle_rule",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            79,
                            "resource \"aws_s3_bucket\" \"cloudfront_logs\" {\n"
                        ],
                        [
                            80,
                            "  bucket = \"${var.project_name}-cf-logs-${random_id.bucket_suffix.hex}\"\n"
                        ],
                        [
                            81,
                            "  tags   = var.common_tags\n"
                        ],
                        [
                            82,
                            "\n"
                        ],
                        [
                            83,
                            "  lifecycle {\n"
                        ],
                        [
                            84,
                            "    prevent_destroy = false # Set to true in production if you want to keep logs\n"
                        ],
                        [
                            85,
                            "  }\n"
                        ],
                        [
                            86,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        79,
                        86
                    ],
                    "resource": "aws_s3_bucket.cloudfront_logs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "bucket": [
                            {
                                "type": "resource",
                                "name": "random_id.bucket_suffix",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_47",
                    "bc_check_id": "BC_AWS_GENERAL_186",
                    "check_name": "Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "__end_line__": 300,
                                    "__start_line__": 232,
                                    "aliases": [
                                        [
                                            "var.domain_name"
                                        ]
                                    ],
                                    "comment": [
                                        "CloudFront distribution for react-app"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "compress": [
                                                true
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "depends_on": [
                                        [
                                            "aws_acm_certificate_validation.cert_validation"
                                        ]
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "aws_s3_bucket.cloudfront_logs.bucket_domain_name"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "react-app-cf-access-logs/"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.website_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_access_control_id": [
                                                "aws_cloudfront_origin_access_control.default.id"
                                            ],
                                            "origin_id": [
                                                "S3-${aws_s3_bucket.website_assets.id}"
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "Production",
                                            "ManagedBy": "Terraform",
                                            "Owner": "DevOps",
                                            "Project": "ReactApp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "aws_acm_certificate.app_certificate.arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "web_acl_id": [
                                        "aws_wafv2_web_acl.default.arn"
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/*/statement/managed_rule_group_statement/name",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            232,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            233,
                            "  enabled             = true\n"
                        ],
                        [
                            234,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            235,
                            "  comment             = \"CloudFront distribution for ${var.project_name}\"\n"
                        ],
                        [
                            236,
                            "  default_root_object = \"index.html\" # Assuming your React app's entry point is index.html\n"
                        ],
                        [
                            237,
                            "\n"
                        ],
                        [
                            238,
                            "  origin {\n"
                        ],
                        [
                            239,
                            "    domain_name              = aws_s3_bucket.website_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            240,
                            "    origin_id                = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            241,
                            "    origin_access_control_id = aws_cloudfront_origin_access_control.default.id\n"
                        ],
                        [
                            242,
                            "  }\n"
                        ],
                        [
                            243,
                            "\n"
                        ],
                        [
                            244,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            245,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            246,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            247,
                            "    target_origin_id = \"S3-${aws_s3_bucket.website_assets.id}\"\n"
                        ],
                        [
                            248,
                            "\n"
                        ],
                        [
                            249,
                            "    forwarded_values {\n"
                        ],
                        [
                            250,
                            "      query_string = false\n"
                        ],
                        [
                            251,
                            "      cookies {\n"
                        ],
                        [
                            252,
                            "        forward = \"none\"\n"
                        ],
                        [
                            253,
                            "      }\n"
                        ],
                        [
                            254,
                            "    }\n"
                        ],
                        [
                            255,
                            "\n"
                        ],
                        [
                            256,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            257,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            258,
                            "    default_ttl            = 3600  # 1 hour\n"
                        ],
                        [
                            259,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            260,
                            "\n"
                        ],
                        [
                            261,
                            "    # Cache policy for static assets (JS, CSS, Images)\n"
                        ],
                        [
                            262,
                            "    # Consider creating a specific cache policy for better control\n"
                        ],
                        [
                            263,
                            "    # cache_policy_id = aws_cloudfront_cache_policy.static_assets.id (example)\n"
                        ],
                        [
                            264,
                            "\n"
                        ],
                        [
                            265,
                            "    # Enable compression for text-based assets\n"
                        ],
                        [
                            266,
                            "    compress = true\n"
                        ],
                        [
                            267,
                            "  }\n"
                        ],
                        [
                            268,
                            "\n"
                        ],
                        [
                            269,
                            "  # If you have API routes like /api/* that should not be cached or go to a different origin\n"
                        ],
                        [
                            270,
                            "  # you would add ordered_cache_behavior blocks here.\n"
                        ],
                        [
                            271,
                            "\n"
                        ],
                        [
                            272,
                            "  price_class = \"PriceClass_100\" # Use PriceClass_All for best performance, PriceClass_100 for cost saving\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  restrictions {\n"
                        ],
                        [
                            275,
                            "    geo_restriction {\n"
                        ],
                        [
                            276,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            277,
                            "    }\n"
                        ],
                        [
                            278,
                            "  }\n"
                        ],
                        [
                            279,
                            "\n"
                        ],
                        [
                            280,
                            "  viewer_certificate {\n"
                        ],
                        [
                            281,
                            "    acm_certificate_arn      = aws_acm_certificate_validation.cert_validation.certificate_arn\n"
                        ],
                        [
                            282,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            283,
                            "    minimum_protocol_version = \"TLSv1.2_2021\" # Recommended for security\n"
                        ],
                        [
                            284,
                            "  }\n"
                        ],
                        [
                            285,
                            "\n"
                        ],
                        [
                            286,
                            "  aliases = [var.domain_name]\n"
                        ],
                        [
                            287,
                            "\n"
                        ],
                        [
                            288,
                            "  logging_config {\n"
                        ],
                        [
                            289,
                            "    include_cookies = false\n"
                        ],
                        [
                            290,
                            "    bucket          = aws_s3_bucket.cloudfront_logs.bucket_domain_name\n"
                        ],
                        [
                            291,
                            "    prefix          = \"${var.project_name}-cf-access-logs/\"\n"
                        ],
                        [
                            292,
                            "  }\n"
                        ],
                        [
                            293,
                            "  \n"
                        ],
                        [
                            294,
                            "  web_acl_id = aws_wafv2_web_acl.default.arn\n"
                        ],
                        [
                            295,
                            "\n"
                        ],
                        [
                            296,
                            "  tags = var.common_tags\n"
                        ],
                        [
                            297,
                            "\n"
                        ],
                        [
                            298,
                            "  # Wait for certificate validation to complete\n"
                        ],
                        [
                            299,
                            "  depends_on = [aws_acm_certificate_validation.cert_validation]\n"
                        ],
                        [
                            300,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        232,
                        300
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Production",
                        "ManagedBy": "Terraform",
                        "Owner": "DevOps",
                        "Project": "ReactApp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-47",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "comment": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "logging_config.prefix": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "variable",
                                "name": "common_tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.acm_certificate_arn": [
                            {
                                "type": "resource",
                                "name": "aws_acm_certificate_validation.cert_validation",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                }
            ],
            "skipped_checks": [],
            "parsing_errors": []
        },
        "summary": {
            "passed": 47,
            "failed": 17,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 13,
            "checkov_version": "3.2.417"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    },
    {
        "check_type": "terraform_plan",
        "results": {
            "passed_checks": [],
            "failed_checks": [],
            "skipped_checks": [],
            "parsing_errors": [
                "./tsconfig.app.json",
                "./tsconfig.node.json",
                "./security_reports/checkov_report.json"
            ]
        },
        "summary": {
            "passed": 0,
            "failed": 0,
            "skipped": 0,
            "parsing_errors": 3,
            "resource_count": 0,
            "checkov_version": "3.2.417"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    }
]
